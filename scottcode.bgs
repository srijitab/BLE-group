# used for the internal data buffer
dim buffer(20)
dim buffer_pointer
dim result
dim ECG(160)
dim ECG_2(160)
dim ECG_3(162)
dim ECG_pointer

event system_boot(major,minor,patch,build,bootloader,hw)	
	call le_gap_set_adv_parameters(3200,3200,7)(result)
	#set to advertising mode
	call le_gap_set_mode(le_gap_general_discoverable,le_gap_undirected_connectable)
	#set the buffer pointer to 0 
	buffer_pointer=0
	ECG_pointer=0
	#set bondable mode
	call sm_set_bondable_mode(1)
    ECG(0:160)="\x04\x0b\x04\x0b\x04\x11\x04\x11\x04\x11\x04\x16\x04\x21\x04\x2c\x04\x36\x04\x3c\x04\x41\x04\x41\x04\x41\x04\x46\x04\x51\x04\x5c\x04\x66\x04\x77\x04\x8c\x04\x97\x04\x9c\x04\x9c\x04\xac\x04\xc7\x04\xe2\x04\xf2\x05\x07\x05\x1d\x05\x37\x05\x4d\x05\x62\x05\x82\x05\xa8\x05\xc3\x05\xcd\x05\xe8\x05\xfd\x06\x13\x06\x2e\x06\x48\x06\x5e\x06\x6e\x06\x6e\x06\x73\x06\x73\x06\x6e\x06\x53\x06\x2e\x06\x13\x05\xf8\x05\xd8\x05\xad\x05\x82\x05\x68\x05\x52\x05\x2d\x05\x07\x04\xf2\x04\xd2\x04\xc2\x04\xb1\x04\x91\x04\x7c\x04\x6c\x04\x66\x04\x66\x04\x61\x04\x61\x04\x5c\x04\x5c\x04\x5c\x04\x5c\x04\x56\x04\x56\x04\x51\x04\x46\x04\x46\x04\x46\x04\x4c\x04\x51"	
	ECG_2(0:160)="\x04\x51\x04\x56\x04\x56\x04\x4c\x04\x4c\x04\x51\x04\x51\x04\x51\x04\x51\x04\x51\x04\x46\x04\x41\x04\x41\x04\x41\x04\x36\x04\x36\x04\x31\x04\x31\x04\x31\x04\x2c\x04\x26\x04\x21\x04\x21\x04\x16\x04\x1c\x04\x21\x04\x21\x04\x1c\x04\x16\x04\x16\x04\x0b\x04\x0b\x04\x11\x04\x11\x04\x0b\x04\x0b\x04\x0b\x04\x11\x04\x11\x04\x11\x04\x11\x04\x11\x04\x0b\x04\x0b\x04\x06\x04\x06\x04\x0b\x04\x0b\x04\x0b\x04\x06\x04\x06\x04\x06\x04\x06\x04\x06\x04\x06\x04\x0b\x04\x0b\x04\x06\x04\x0b\x04\x0b\x04\x01\x04\x01\x04\x01\x04\x01\x04\x0b\x04\x0b\x04\x0b\x04\x0b\x04\x0b\x04\x06\x04\x06\x04\x0b\x04\x11\x04\x11\x04\x11\x04\x11\x04\x11\x04\x11\x04\x0b\x04\x0b"
	ECG_3(0:162)="\x04\x11\x04\x1c\x04\x36\x04\x41\x04\x41\x04\x41\x04\x3c\x04\x51\x04\x6c\x04\x91\x04\xa1\x04\xa1\x04\xa1\x04\xa1\x04\x9c\x04\x97\x04\x7c\x04\x56\x04\x3c\x04\x2c\x04\x26\x04\x21\x04\x0b\x04\x0b\x04\x01\x04\x06\x04\x06\x04\x01\x04\x01\x03\xf6\x03\xf6\x03\xf6\x03\xfb\x03\xf6\x03\xeb\x03\xe6\x03\xeb\x03\xeb\x03\xe6\x03\xe1\x03\x96\x03\x70\x03\x86\x04\x56\x05\xd8\x07\xcf\x0a\x17\x0c\x39\x0d\xcb\x0e\x0b\x0c\x59\x08\xe0\x05\x17\x02\x9a\x01\xf4\x02\x3a\x02\x9a\x02\xaa\x02\x95\x02\x64\x02\x5f\x02\x5f\x02\x5f\x02\x6f\x02\x64\x02\x75\x02\xaa\x02\xf5\x03\x3b\x03\x70\x03\x96\x03\xb0\x03\xd6\x03\xe6\x03\xf6\x03\xfb\x04\x01\x04\x06\x04\x01\x04\x06\x04\x0b"
end

#Scott - not sure about address type...
event le_connection_opened(address,address_type,master,connection,bonding)
	# start timer when connected
	#configure timer to 200 points/second
	call hardware_set_soft_timer(164,0,0)	
end

event hardware_soft_timer(handle)
    if ECG_pointer < 160
	  buffer(buffer_pointer:2) = ECG(ECG_pointer:2)
	else
	  if ECG_pointer < 320
	    buffer(buffer_pointer:2) = ECG_2(ECG_pointer-160:2)
      else 	  
		buffer(buffer_pointer:2) = ECG_3(ECG_pointer-320:2)
	  end if
	end if
	buffer_pointer = buffer_pointer+2
	ECG_pointer = ECG_pointer+2
	if buffer_pointer >= 20
	  call gatt_server_send_characteristic_notification($ff,xgatt_rx,20,buffer(0:20))
	  buffer_pointer=0
	end if
    if ECG_pointer >= 482
	  ECG_pointer=0
	end if
end

event le_connection_closed(reason,connection)	
    #connection disconnected, stop timer, continue advertising
	call hardware_set_soft_timer(0,0,0)
    call le_gap_set_mode(le_gap_general_discoverable,le_gap_undirected_connectable)
end